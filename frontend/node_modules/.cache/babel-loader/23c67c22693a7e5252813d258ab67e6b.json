{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\youtubeProjects\\\\dj-ivanov\\\\react_django\\\\mynotes\\\\src\\\\pages\\\\NotePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport notes from '../assets/data';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotePage() {\n  _s();\n  let params = useParams();\n  let noteId = params.id;\n  // gets the note that has the same id as the one in the url parameters\n  let [note, setNote] = useState(null);\n  let getNote = async () => {\n    let response = await fetch(`http://localhost:8000/notes/${noteId}`);\n    let data = await response.json();\n    setNote(data);\n  };\n  let updateNote = async () => {\n    await fetch(`http://localhost:8000/notes/${noteId}`, {\n      // specifies the method as PUT or Update\n      method: 'PUT',\n      // specifies the content as a JSON data\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      //\n      body: JSON.stringify({\n        ...note,\n        'updated': new Date()\n      })\n    });\n  };\n  let handleSubmit = () => {\n    updateNote();\n  };\n  useEffect(() => {\n    getNote();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/`,\n          onSubmit: handleSubmit(),\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: note === null || note === void 0 ? void 0 : note.body,\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(NotePage, \"GyecKfmZuiEQj7DMlhNIJEsUGEg=\", false, function () {\n  return [useParams];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","notes","ReactComponent","ArrowLeft","NotePage","params","noteId","id","note","setNote","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","Date","handleSubmit","e","target","value"],"sources":["C:/Users/Admin/Desktop/youtubeProjects/dj-ivanov/react_django/mynotes/src/pages/NotePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport notes from '../assets/data';\r\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\r\n\r\n\r\n\r\nfunction NotePage() {\r\n  let params = useParams();\r\n  let noteId = params.id;\r\n  // gets the note that has the same id as the one in the url parameters\r\n  let [note, setNote] = useState(null);\r\n\r\n  let getNote = async () => {\r\n    let response = await fetch(`http://localhost:8000/notes/${noteId}`)\r\n    let data = await response.json()\r\n    setNote(data)\r\n  }\r\n\r\n  let updateNote = async () => {\r\n    await fetch(`http://localhost:8000/notes/${noteId}`, {\r\n      // specifies the method as PUT or Update\r\n      method: 'PUT',\r\n      // specifies the content as a JSON data\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      //\r\n      body: JSON.stringify({...note, 'updated': new Date()}) \r\n    })\r\n  }\r\n\r\n  let handleSubmit = () => {\r\n    updateNote()\r\n  }\r\n\r\n  useEffect(() => {\r\n    getNote()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className='note'>\r\n      <div className='note-header'>\r\n        <h3>\r\n          <Link to={`/`} onSubmit={handleSubmit()}>\r\n            <ArrowLeft />\r\n          </Link>\r\n        </h3>\r\n      </div>\r\n        \r\n      {/* onChange sets the state of note updating it on click */}\r\n      <textarea value={note?.body} onChange={(e) => { setNote({...note, 'body': e.target.value}) }}>\r\n        \r\n      </textarea>  \r\n      \r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default NotePage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAAQC,SAAS,EAAEC,IAAI,QAAO,kBAAkB;AAChD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,cAAc,IAAIC,SAAS,QAAQ,0BAA0B;AAAC;AAIvE,SAASC,QAAQ,GAAG;EAAA;EAClB,IAAIC,MAAM,GAAGN,SAAS,EAAE;EACxB,IAAIO,MAAM,GAAGD,MAAM,CAACE,EAAE;EACtB;EACA,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEpC,IAAIa,OAAO,GAAG,YAAY;IACxB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BN,MAAO,EAAC,CAAC;IACnE,IAAIO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAChCL,OAAO,CAACI,IAAI,CAAC;EACf,CAAC;EAED,IAAIE,UAAU,GAAG,YAAY;IAC3B,MAAMH,KAAK,CAAE,+BAA8BN,MAAO,EAAC,EAAE;MACnD;MACAU,MAAM,EAAE,KAAK;MACb;MACAC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACD;MACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAC,GAAGZ,IAAI;QAAE,SAAS,EAAE,IAAIa,IAAI;MAAE,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC;EAED,IAAIC,YAAY,GAAG,MAAM;IACvBP,UAAU,EAAE;EACd,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACdY,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAGN,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACnB;MAAK,SAAS,EAAC,aAAa;MAAA,uBAC1B;QAAA,uBACE,QAAC,IAAI;UAAC,EAAE,EAAG,GAAG;UAAC,QAAQ,EAAEY,YAAY,EAAG;UAAA,uBACtC,QAAC,SAAS;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MACR;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACD,eAGN;MAAU,KAAK,EAAEd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,IAAK;MAAC,QAAQ,EAAGK,CAAC,IAAK;QAAEd,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAE,MAAM,EAAEe,CAAC,CAACC,MAAM,CAACC;QAAK,CAAC,CAAC;MAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAElF;EAAA;IAAA;IAAA;IAAA;EAAA,QAEP;AAGV;AAAC,GApDQrB,QAAQ;EAAA,QACFL,SAAS;AAAA;AAAA,KADfK,QAAQ;AAsDjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}